# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$hosts = {
  puppetmaster:     { fqdn: "puppetmaster.local",     ip: "10.255.255.100" },
  openvpn_precise:  { fqdn: "precise.openvpn.local",  ip: "10.255.255.10" },
}

def mk_etc_hosts_of name
<<-EOF
echo "
  127.0.0.1   localhost
  127.0.1.1   #{$hosts[name][:fqdn]}

  # The following lines are desirable for IPv6 capable hosts
  ::1     localhost ip6-localhost ip6-loopback
  fe00::0 ip6-localnet
  ff00::0 ip6-mcastprefix
  ff02::1 ip6-allnodes
  ff02::2 ip6-allrouters

  # all hosts:
  #{
    $hosts.map{|k,v| v[:ip]+" "+v[:fqdn]}.
      join("\n")
  }
" > /etc/hosts
hostname #{$hosts[name][:fqdn]}
echo "#{$hosts[name][:fqdn]}" > /etc/hostname
EOF
end

def server_config c, name
  c.vm.hostname = $hosts[name][:fqdn]
  c.vm.network "private_network", ip: $hosts[name][:ip]

  # bootstrap /etc/hosts
  c.vm.provision "shell", inline: mk_etc_hosts_of(name)

  c.vm.synced_folder "../.", "/etc/puppet/modules/openvpn"
  c.vm.provision "puppet_server" do |puppet|
    puppet.puppet_server = $hosts[:puppetmaster][:fqdn]
  end
end


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define :puppetmaster do |c|
    c.vm.box = 'precise64'
    c.vm.hostname = $hosts[:puppetmaster][:fqdn]
    c.vm.network "private_network", ip: $hosts[:puppetmaster][:ip]

    c.vm.provision "shell", inline: mk_etc_hosts_of(:puppetmaster)
    c.vm.provision "shell", path: "scripts/setup-puppetmaster.sh"

    c.vm.synced_folder "manifests", "/etc/puppet/manifests"
    c.vm.synced_folder "../.", "/etc/puppet/modules/openvpn"
    c.vm.synced_folder "openvpn.client", "/etc/openvpn/client"

    $hosts.find_all{|k,v| k != :puppetmaster}.each do |k,v|
      c.vm.synced_folder "openvpn.d", "/secrets/openvpn/"+v[:fqdn]
    end
  end

  config.vm.define :openvpn_precise do |c|
    c.vm.box = 'precise64'
    server_config c, :openvpn_precise
  end

end
